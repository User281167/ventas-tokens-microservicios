apiVersion: apps/v1
kind: Deployment
metadata:
  name: usuarios-deploy
  namespace: token-sale
spec:
  replicas: 2
  selector:
    matchLabels: { app: usuarios }
  template:
    metadata:
      labels: { app: usuarios }
    spec:
      initContainers:
        - name: seed
          image: busybox
          command: ["sh", "-c", "cp /config/usuarios.json /data/usuarios.json"]
          volumeMounts:
          - name: cfg
            mountPath: /config
          - name: data
            mountPath: /data
      containers:
        - name: usuarios
          image: usuarios-svc:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: DATA_PATH
            value: "/app/data/usuarios.json"
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet: { path: /health, port: 8000 }
            initialDelaySeconds: 3
          readinessProbe:
            httpGet: { path: /health, port: 8000 }
            initialDelaySeconds: 2
          volumeMounts:
            - name: data
            mountPath: /app/data
      volumes:
      - name: cfg
        configMap: { name: usuarios-data }
      - name: data
        emptyDir: {}
---
# k8s/svc-usuarios.yaml
apiVersion: v1
kind: Service
metadata:
  name: usuarios-svc
  namespace: token-sale
spec:
  selector: { app: usuarios }
  ports:
    - port: 8000
      targetPort: 8000